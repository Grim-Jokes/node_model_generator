//base classe for the context collection
var ctx = DbCollection.prototype;

function DbCollection(table_name) {
	//This collection will focus on creating and caching queryable objects before hitting the database
	
	this.table_name = table_name || '';
	this.select_clause = [];
	this.where_clause = [];

	this.sql = 'SELECT * FROM {table_name}'.replace("{table_name}", table_name);
}

ctx.add = function (model) {
}

ctx.bulk_add = function (models) { 
}

ctx.where = function (expression) {
	expression = expression.toString();
	expression = expression.replace(/"/g, "'").replace(/==/g, '=').replace(/\s/g, '');
	
	var pattern = /[\w\d_]+\s*[=!<>]{1,2}\s*[\w\d'"]+\s*/gi
	var res = expression.match(pattern);
	var operators = expression.match(/\|\||&&/g);
	
	
	
	var where_clause = []
	var clause = {};

	for (var i = 1, j = 0; i < res.length; i++, j++) {
			
		var operator = res[i].match(/[<>!=]{1,2}/);
		var split_res = res[i].split(/[<>!=]{1,2}/);
		var field = res[i];
		
		clause[split_res[0]] = split_res[1];
		clause[split_res[0] +'_op'] = operator[0];

		if (operators && operators[j]) {
			if (operators[j] == '||') {
				where_clause.push(clause);
				clause = {};
			}
		}
		else {
			where_clause.push(clause);
		}
	}
	
	var new_collection = new DbCollection();

	console.log(where_clause);
	

	return new DbCollection();
}

ctx.select = function() {
}

ctx.delete = function () {
}

ctx.first = function () {
}

ctx.to_list = function () {
}

module.exports = DbCollection;